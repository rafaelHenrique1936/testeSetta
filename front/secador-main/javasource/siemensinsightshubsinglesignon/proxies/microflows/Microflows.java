// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package siemensinsightshubsinglesignon.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the SiemensInsightsHubSingleSignOn module
	public static siemensinsightshubsinglesignon.proxies.CredentialsResponse aCT_ApplicationCredentials(IContext context, siemensinsightshubsinglesignon.proxies.Credentials _credentialsIn)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CredentialsIn", _credentialsIn == null ? null : _credentialsIn.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("SiemensInsightsHubSingleSignOn.ACT_ApplicationCredentials").withParams(params).execute(context);
		return result == null ? null : siemensinsightshubsinglesignon.proxies.CredentialsResponse.initialize(context, result);
	}
	public static boolean bC_AddTenantAssociation(IContext context, siemensinsightshubsinglesignon.proxies.TenantObject _tenantObject)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TenantObject", _tenantObject == null ? null : _tenantObject.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("SiemensInsightsHubSingleSignOn.BC_AddTenantAssociation").withParams(params).execute(context);
	}
	public static siemensinsightshubsinglesignon.proxies.AccessToken dS_AccessToken(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("SiemensInsightsHubSingleSignOn.DS_AccessToken").withParams(params).execute(context);
		return result == null ? null : siemensinsightshubsinglesignon.proxies.AccessToken.initialize(context, result);
	}
	public static siemensinsightshubsinglesignon.proxies.Account dS_Account(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("SiemensInsightsHubSingleSignOn.DS_Account").withParams(params).execute(context);
		return result == null ? null : siemensinsightshubsinglesignon.proxies.Account.initialize(context, result);
	}
	public static siemensinsightshubsinglesignon.proxies.Tenant dS_FirstTenant(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("SiemensInsightsHubSingleSignOn.DS_FirstTenant").withParams(params).execute(context);
		return result == null ? null : siemensinsightshubsinglesignon.proxies.Tenant.initialize(context, result);
	}
	public static siemensinsightshubsinglesignon.proxies.TokenForScheduledEvents dS_GetAccessTokenForScheduledEvents(IContext context, siemensinsightshubsinglesignon.proxies.Tenant _tenant)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Tenant", _tenant == null ? null : _tenant.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("SiemensInsightsHubSingleSignOn.DS_GetAccessTokenForScheduledEvents").withParams(params).execute(context);
		return result == null ? null : siemensinsightshubsinglesignon.proxies.TokenForScheduledEvents.initialize(context, result);
	}
	public static java.lang.String dS_GetAppUUID(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.String) Core.microflowCall("SiemensInsightsHubSingleSignOn.DS_GetAppUUID").withParams(params).execute(context);
	}
	public static java.lang.String gET_PublicKeys(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.String) Core.microflowCall("SiemensInsightsHubSingleSignOn.GET_PublicKeys").withParams(params).execute(context);
	}
	public static java.lang.String getApple_app_site_association(IContext context, system.proxies.HttpResponse _httpResponse)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		return (java.lang.String) Core.microflowCall("SiemensInsightsHubSingleSignOn.GetApple_app_site_association").withParams(params).execute(context);
	}
	public static java.lang.String getAssetlinks_json(IContext context, system.proxies.HttpResponse _httpResponse)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		return (java.lang.String) Core.microflowCall("SiemensInsightsHubSingleSignOn.GetAssetlinks_json").withParams(params).execute(context);
	}
	public static siemensinsightshubsinglesignon.proxies.MobileToken mobileSSO(IContext context, siemensinsightshubsinglesignon.proxies.MobileToken _token)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Token", _token == null ? null : _token.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("SiemensInsightsHubSingleSignOn.MobileSSO").withParams(params).execute(context);
		return result == null ? null : siemensinsightshubsinglesignon.proxies.MobileToken.initialize(context, result);
	}
	public static boolean registerSingleSignOn(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("SiemensInsightsHubSingleSignOn.RegisterSingleSignOn").withParams(params).execute(context);
	}
}
