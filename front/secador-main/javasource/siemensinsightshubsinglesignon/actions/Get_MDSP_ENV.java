// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package siemensinsightshubsinglesignon.actions;

import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import siemensinsightshubsinglesignon.CredentialsHandler;
import siemensinsightshubsinglesignon.proxies.MDSP_ENV;
import siemensinsightshubsinglesignon.proxies.constants.Constants;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Get_MDSP_ENV extends CustomJavaAction<IMendixObject>
{
	public Get_MDSP_ENV(IContext context)
	{
		super(context);
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		MDSP_ENV mdsp_env = new MDSP_ENV(context());

		Boolean local = (System.getenv("VCAP_SERVICES") == null);
		if (local) {
			String ClientId = CredentialsHandler.getClientId();
			mdsp_env.setMDSP_KEY_STORE_CLIENT_ID(ClientId);
			mdsp_env.setMDSP_KEY_STORE_CLIENT_SECRET(CredentialsHandler.getClientSecret());
			mdsp_env.setMDSP_OS_VM_APP_NAME(Constants.getCockpitApplicationName());
			mdsp_env.setMDSP_OS_VM_APP_VERSION(Constants.getCockpitApplicationVersion());
			mdsp_env.setMDSP_OS_VM_HOST_TENANT(this.getHostTenant(ClientId));
			
		} else {
			// Read values from Environment
			String ClientId = this.getEnv(MDSP_ENV.MemberNames.MDSP_KEY_STORE_CLIENT_ID);
			mdsp_env.setMDSP_KEY_STORE_CLIENT_ID(ClientId);
			mdsp_env.setMDSP_KEY_STORE_CLIENT_SECRET(this.getEnv(MDSP_ENV.MemberNames.MDSP_KEY_STORE_CLIENT_SECRET));
			mdsp_env.setMDSP_OS_VM_APP_NAME(this.getEnv(MDSP_ENV.MemberNames.MDSP_OS_VM_APP_NAME));
			mdsp_env.setMDSP_OS_VM_APP_VERSION(this.getEnv(MDSP_ENV.MemberNames.MDSP_OS_VM_APP_VERSION));
			// We have to extract the Host Tenant from the Client ID as currently no env
			// variable is available.			
			mdsp_env.setMDSP_OS_VM_HOST_TENANT(this.getHostTenant(ClientId));			
		}
		return mdsp_env.getMendixObject();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Get_MDSP_ENV";
	}

	// BEGIN EXTRA CODE
	protected static ILogNode LOGGER = Core.getLogger(Constants.getModuleName());

	private String getEnv(MDSP_ENV.MemberNames Name) {
		if (System.getenv(Name.toString()) == null) {
			LOGGER.error("ENVIRONMENT VARIABLE " + Name.toString() + " not found!");
		}
		return System.getenv(Name.toString());
	}
	
	private String getHostTenant(String ClientId)
	{
		if (System.getenv(MDSP_ENV.MemberNames.MDSP_OS_VM_HOST_TENANT.toString()) != null) {
			return System.getenv(MDSP_ENV.MemberNames.MDSP_OS_VM_HOST_TENANT.toString());
		}
		// Try to extract the HostTenant from the given ClientId
		if (ClientId.indexOf("-") > 0) {
			return ClientId.substring(0, ClientId.indexOf("-"));
		} else {
			return "";
		}
	}
	// END EXTRA CODE
}
