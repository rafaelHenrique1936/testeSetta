define(["big.js"], (__WEBPACK_EXTERNAL_MODULE_big_js__) => { return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../../../../../Users/steph/Mendix/secador-main/javascriptsource/nanoflowcommons/actions/OpenURL.js":
/*!*************************************************************************************************************!*\
  !*** ../../../../../../Users/steph/Mendix/secador-main/javascriptsource/nanoflowcommons/actions/OpenURL.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpenURL": () => (/* binding */ OpenURL)
/* harmony export */ });
/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! big.js */ "big.js");
/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(big_js__WEBPACK_IMPORTED_MODULE_0__);
// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.


// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Opens the provided URL in the web browser.
 * @param {string} url - This field is required.
 * @returns {Promise.<boolean>}
 */
async function OpenURL(url) {
  // BEGIN USER CODE
  if (!url) {
    return Promise.reject(new Error("Input parameter 'Url' is required"));
  }
  // Native platform
  if (navigator && navigator.product === "ReactNative") {
    const Linking = (__webpack_require__(/*! react-native */ "?1252").Linking);
    return Linking.canOpenURL(url).then(supported => {
      if (!supported) {
        return false;
      }
      return Linking.openURL(url).then(() => true);
    });
  }
  // Hybrid platform
  if (window && window.cordova) {
    window.open(url, "_system");
    return Promise.resolve(true);
  }
  // Web platform
  if (window) {
    window.location.href = url;
    return Promise.resolve(true);
  }
  return Promise.resolve(false);
  // END USER CODE
}

/***/ }),

/***/ "big.js":
/*!*************************!*\
  !*** external "big.js" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_big_js__;

/***/ }),

/***/ "?1252":
/*!*************************************!*\
  !*** react-native (ignored module) ***!
  \*************************************/
/***/ (() => {

/* empty */

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!*************************************************************************************!*\
  !*** ../../../../../../Users/steph/Mendix/secador-main/deployment/tmp/jsactions.js ***!
  \*************************************************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NanoflowCommons$OpenURL": () => (/* binding */ NanoflowCommons$OpenURL)
/* harmony export */ });
const NanoflowCommons$OpenURL = async () => (await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../../../../Users/steph/Mendix/secador-main/javascriptsource/nanoflowcommons/actions/OpenURL */ "../../../../../../Users/steph/Mendix/secador-main/javascriptsource/nanoflowcommons/actions/OpenURL.js"))).OpenURL;
})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNhY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2Qjs7QUFFN0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZUFBZUMsT0FBT0EsQ0FBQ0MsR0FBRyxFQUFFO0VBQ2xDO0VBQ0csSUFBSSxDQUFDQSxHQUFHLEVBQUU7SUFDTixPQUFPQyxPQUFPLENBQUNDLE1BQU0sQ0FBQyxJQUFJQyxLQUFLLENBQUMsbUNBQW1DLENBQUMsQ0FBQztFQUN6RTtFQUNBO0VBQ0EsSUFBSUMsU0FBUyxJQUFJQSxTQUFTLENBQUNDLE9BQU8sS0FBSyxhQUFhLEVBQUU7SUFDbEQsTUFBTUMsT0FBTyxHQUFHQywwREFBK0I7SUFDL0MsT0FBT0QsT0FBTyxDQUFDRSxVQUFVLENBQUNSLEdBQUcsQ0FBQyxDQUFDUyxJQUFJLENBQUNDLFNBQVMsSUFBSTtNQUM3QyxJQUFJLENBQUNBLFNBQVMsRUFBRTtRQUNaLE9BQU8sS0FBSztNQUNoQjtNQUNBLE9BQU9KLE9BQU8sQ0FBQ0ssT0FBTyxDQUFDWCxHQUFHLENBQUMsQ0FBQ1MsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDO0lBQ2hELENBQUMsQ0FBQztFQUNOO0VBQ0E7RUFDQSxJQUFJRyxNQUFNLElBQUlBLE1BQU0sQ0FBQ0MsT0FBTyxFQUFFO0lBQzFCRCxNQUFNLENBQUNFLElBQUksQ0FBQ2QsR0FBRyxFQUFFLFNBQVMsQ0FBQztJQUMzQixPQUFPQyxPQUFPLENBQUNjLE9BQU8sQ0FBQyxJQUFJLENBQUM7RUFDaEM7RUFDQTtFQUNBLElBQUlILE1BQU0sRUFBRTtJQUNSQSxNQUFNLENBQUNJLFFBQVEsQ0FBQ0MsSUFBSSxHQUFHakIsR0FBRztJQUMxQixPQUFPQyxPQUFPLENBQUNjLE9BQU8sQ0FBQyxJQUFJLENBQUM7RUFDaEM7RUFDQSxPQUFPZCxPQUFPLENBQUNjLE9BQU8sQ0FBQyxLQUFLLENBQUM7RUFDaEM7QUFDRDs7Ozs7Ozs7Ozs7QUM1Q0E7Ozs7Ozs7Ozs7QUNBQTs7Ozs7O1VDQUE7VUFDQTs7VUFFQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTs7VUFFQTtVQUNBOztVQUVBO1VBQ0E7VUFDQTs7Ozs7V0N0QkE7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBLGlDQUFpQyxXQUFXO1dBQzVDO1dBQ0E7Ozs7O1dDUEE7V0FDQTtXQUNBO1dBQ0E7V0FDQSx5Q0FBeUMsd0NBQXdDO1dBQ2pGO1dBQ0E7V0FDQTs7Ozs7V0NQQTs7Ozs7V0NBQTtXQUNBO1dBQ0E7V0FDQSx1REFBdUQsaUJBQWlCO1dBQ3hFO1dBQ0EsZ0RBQWdELGFBQWE7V0FDN0Q7Ozs7Ozs7Ozs7Ozs7OztBQ05PLE1BQU1HLHVCQUF1QixHQUFHLE1BQUFBLENBQUEsS0FBWSxDQUFDLE1BQU0sdVNBQTZGLEVBQUVuQixPQUFPLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vLi4vLi4vLi4vLi4vVXNlcnMvc3RlcGgvTWVuZGl4L3NlY2Fkb3ItbWFpbi9qYXZhc2NyaXB0c291cmNlL25hbm9mbG93Y29tbW9ucy9hY3Rpb25zL09wZW5VUkwuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIGFtZCBcImJpZy5qc1wiIiwid2VicGFjazovLy9yZWFjdC1uYXRpdmUiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovLy8uLi8uLi8uLi8uLi8uLi8uLi9Vc2Vycy9zdGVwaC9NZW5kaXgvc2VjYWRvci1tYWluL2RlcGxveW1lbnQvdG1wL2pzYWN0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSBNZW5kaXggU3R1ZGlvIFByby5cclxuLy9cclxuLy8gV0FSTklORzogT25seSB0aGUgZm9sbG93aW5nIGNvZGUgd2lsbCBiZSByZXRhaW5lZCB3aGVuIGFjdGlvbnMgYXJlIHJlZ2VuZXJhdGVkOlxyXG4vLyAtIHRoZSBpbXBvcnQgbGlzdFxyXG4vLyAtIHRoZSBjb2RlIGJldHdlZW4gQkVHSU4gVVNFUiBDT0RFIGFuZCBFTkQgVVNFUiBDT0RFXHJcbi8vIC0gdGhlIGNvZGUgYmV0d2VlbiBCRUdJTiBFWFRSQSBDT0RFIGFuZCBFTkQgRVhUUkEgQ09ERVxyXG4vLyBPdGhlciBjb2RlIHlvdSB3cml0ZSB3aWxsIGJlIGxvc3QgdGhlIG5leHQgdGltZSB5b3UgZGVwbG95IHRoZSBwcm9qZWN0LlxyXG5pbXBvcnQgeyBCaWcgfSBmcm9tIFwiYmlnLmpzXCI7XHJcblxyXG4vLyBCRUdJTiBFWFRSQSBDT0RFXHJcbi8vIEVORCBFWFRSQSBDT0RFXHJcblxyXG4vKipcclxuICogT3BlbnMgdGhlIHByb3ZpZGVkIFVSTCBpbiB0aGUgd2ViIGJyb3dzZXIuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgLSBUaGlzIGZpZWxkIGlzIHJlcXVpcmVkLlxyXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48Ym9vbGVhbj59XHJcbiAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gT3BlblVSTCh1cmwpIHtcclxuXHQvLyBCRUdJTiBVU0VSIENPREVcclxuICAgIGlmICghdXJsKSB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihcIklucHV0IHBhcmFtZXRlciAnVXJsJyBpcyByZXF1aXJlZFwiKSk7XHJcbiAgICB9XHJcbiAgICAvLyBOYXRpdmUgcGxhdGZvcm1cclxuICAgIGlmIChuYXZpZ2F0b3IgJiYgbmF2aWdhdG9yLnByb2R1Y3QgPT09IFwiUmVhY3ROYXRpdmVcIikge1xyXG4gICAgICAgIGNvbnN0IExpbmtpbmcgPSByZXF1aXJlKFwicmVhY3QtbmF0aXZlXCIpLkxpbmtpbmc7XHJcbiAgICAgICAgcmV0dXJuIExpbmtpbmcuY2FuT3BlblVSTCh1cmwpLnRoZW4oc3VwcG9ydGVkID0+IHtcclxuICAgICAgICAgICAgaWYgKCFzdXBwb3J0ZWQpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gTGlua2luZy5vcGVuVVJMKHVybCkudGhlbigoKSA9PiB0cnVlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8vIEh5YnJpZCBwbGF0Zm9ybVxyXG4gICAgaWYgKHdpbmRvdyAmJiB3aW5kb3cuY29yZG92YSkge1xyXG4gICAgICAgIHdpbmRvdy5vcGVuKHVybCwgXCJfc3lzdGVtXCIpO1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodHJ1ZSk7XHJcbiAgICB9XHJcbiAgICAvLyBXZWIgcGxhdGZvcm1cclxuICAgIGlmICh3aW5kb3cpIHtcclxuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHVybDtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmYWxzZSk7XHJcblx0Ly8gRU5EIFVTRVIgQ09ERVxyXG59XHJcbiIsIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9iaWdfanNfXzsiLCIvKiBlbXB0eSAqLyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJleHBvcnQgY29uc3QgTmFub2Zsb3dDb21tb25zJE9wZW5VUkwgPSBhc3luYyAoKSA9PiAoYXdhaXQgaW1wb3J0KFwiQzovVXNlcnMvc3RlcGgvTWVuZGl4L3NlY2Fkb3ItbWFpbi9qYXZhc2NyaXB0c291cmNlL25hbm9mbG93Y29tbW9ucy9hY3Rpb25zL09wZW5VUkxcIikpLk9wZW5VUkw7XG4iXSwibmFtZXMiOlsiQmlnIiwiT3BlblVSTCIsInVybCIsIlByb21pc2UiLCJyZWplY3QiLCJFcnJvciIsIm5hdmlnYXRvciIsInByb2R1Y3QiLCJMaW5raW5nIiwicmVxdWlyZSIsImNhbk9wZW5VUkwiLCJ0aGVuIiwic3VwcG9ydGVkIiwib3BlblVSTCIsIndpbmRvdyIsImNvcmRvdmEiLCJvcGVuIiwicmVzb2x2ZSIsImxvY2F0aW9uIiwiaHJlZiIsIk5hbm9mbG93Q29tbW9ucyRPcGVuVVJMIl0sInNvdXJjZVJvb3QiOiIifQ==